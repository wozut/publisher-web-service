name: On pull request
permissions:
  contents: read

on:
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  perform_validations_and_checks:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_LATEST_URL: ghcr.io/wozut/publisher-web-service:latest
      IMAGE_COMMIT_SHA_URL: ghcr.io/wozut/publisher-web-service:${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start postgres
        run: |
          docker compose up -d postgres
          until docker compose exec -i postgres pg_isready ; do sleep 1 ; done

#      - name: Run database migrations
#        run: docker compose up infrastructure

      - name: Gradle build
        run: ./gradlew build

      - name: Stop services
        run: nohup docker compose down &

#      - name: Get Grafana agent
#        run: |
#          curl -O -L https://github.com/grafana/grafana-opentelemetry-java/releases/latest/download/grafana-opentelemetry-java.jar

      - name: Verify Docker can build Docker images
        run: |
          docker build \
          --build-arg JAR_FILE=spring-boot/build/libs/spring-boot.jar \
          -t ${{ env.IMAGE_LATEST_URL }} \
          -t ${{ env.IMAGE_COMMIT_SHA_URL }} \
          --platform=linux/amd64 \
          .

#          --build-arg GRAFANA_AGENT_FILE=grafana-opentelemetry-java.jar \
